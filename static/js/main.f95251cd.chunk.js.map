{"version":3,"sources":["queries/fragments.js","queries/index.js","components/Recipe/RecipeItem.js","components/Spinner.js","components/App.js","serviceWorker.js","components/Error.js","components/Auth/Signin.js","components/Auth/Signup.js","components/withSession.js","components/Auth/Signout.js","components/NavBar.js","components/Recipe/SearchItem.js","components/Recipe/Search.js","withAuth.js","components/Recipe/AddRecipe.js","components/Profile/UserInfo.js","components/Profile/UserRecipes.js","components/Profile/Profile.js","components/Recipe/LikeRecipe.js","components/Recipe/RecipePage.js","index.js"],"names":["recipeFragments","recipe","gql","_templateObject","GET_ALL_RECIPES","queries_templateObject","SIGNUP_USER","_templateObject2","SIGNIN_USER","_templateObject3","GET_CURRENT_USER","_templateObject4","GET_RECIPE","_templateObject5","SEARCH_RECIPE","_templateObject6","ADD_RECIPE","_templateObject7","GET_USER_RECIPES","_templateObject8","DELETE_USER_RECIPE","_templateObject9","LIKE_RECIPE","_templateObject10","UNLIKE_RECIPE","_templateObject11","UPDATE_USER_RECIPE","_templateObject12","Recipe","posed","li","shown","opacity","hidden","RecipeItem","_ref","react_default","a","createElement","className","style","background","concat","imgUrl","category","Link","to","id","name","Spinner","react_spinners","color","size","margin","RecipeList","ul","x","staggerChildren","App","state","on","slideIn","_this","setState","setTimeout","this","react_apollo_browser_umd","query","data","loading","error","components_Spinner","message","pose","getAllRecipes","map","Recipe_RecipeItem","key","React","Component","Boolean","window","location","hostname","match","Error","initialState","username","password","Signin","handleChange","e","_e$target","target","value","Object","defineProperty","clearState","objectSpread","handleSubmit","event","signinUser","preventDefault","then","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","log","localStorage","setItem","token","props","refetch","history","push","stop","_x","apply","arguments","validateForm","_this$state","_this2","_this$state2","mutation","variables","_ref3","onSubmit","type","placeholder","onChange","disabled","components_Error","withRouter","email","passwordConfirmation","Signup","signupUser","withSession","assign","session","client","onClick","removeItem","resetStore","handleSignout","NavBarUnAuth","NavLink","exact","NavBarAuth","react","Auth_Signout","getCurrentUser","NavBar","NavBar_NavBarAuth","NavBar_NavBarUnAuth","SearchItem","likes","Search","searchResult","searchRecipe","persist","searchTerm","sent","Recipe_SearchItem","withAuth","conditionFunc","Redirect","instructions","description","AddRecipe","_event$target","handleEditorChange","newContent","editor","getData","addRecipe","updateCache","cache","readQuery","writeQuery","toConsumableArray","refetchQueries","update","htmlFor","lib_default","content","events","change","UserInfo","favorites","fav","length","UserRecipes","modal","handleDelete","deleteUserRecipe","confirm","closeModal","loadRecipe","updateUserRecipe","UserRecipes_EditRecipeModel","getUserRecipes","caches","_ref4","filter","attrs","undefined","marginBottom","EditRecipeModel","_ref5","Profile_UserInfo","Profile_UserRecipes","liked","handleClick","likeRecipe","unlikeRecipe","prevState","handleLike","_callee2","_context2","_x2","updateLike","getRecipe","updateUnlike","_ref6","prevLiked","findIndex","params","role","aria-label","dangerouslySetInnerHTML","__html","Recipe_LikeRecipe","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","authorization","onError","networkError","statusCode","RootWithSession","BrowserRouter","components_NavBar","Switch","Route","path","component","render","Auth_Signin","Auth_Signup","RecipePage","Profile","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f95251cd.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nexport const recipeFragments = {\r\n   recipe: gql`\r\n       fragment CompleteRecipe on Recipe {\r\n           id\r\n           name\r\n           imgUrl\r\n           category\r\n           description\r\n           instructions\r\n           createdDate\r\n           likes,\r\n           username\r\n       }\r\n   `\r\n};\r\n","import { gql } from 'apollo-boost';\r\nimport { recipeFragments } from './fragments';\r\n\r\nexport const GET_ALL_RECIPES = gql`\r\n    query {\r\n        getAllRecipes {\r\n            id\r\n            name\r\n            imgUrl\r\n            description\r\n            instructions\r\n            category\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SIGNUP_USER = gql`\r\n    mutation($username: String!, $email: String!, $password: String!) {\r\n        signupUser(username: $username, email: $email, password: $password) {\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SIGNIN_USER = gql`\r\n    mutation($username: String!, $password: String!) {\r\n        signinUser(username: $username, password: $password) {\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n    query {\r\n        getCurrentUser {\r\n            username\r\n            joinDate\r\n            email\r\n            favorites {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_RECIPE = gql`\r\n    query($id: ID!) {\r\n        getRecipe(id: $id) {\r\n            ...CompleteRecipe\r\n        }\r\n    }\r\n    ${recipeFragments.recipe}\r\n`;\r\n\r\nexport const SEARCH_RECIPE = gql`\r\n    query($searchTerm: String) {\r\n        searchRecipe(searchTerm: $searchTerm) {\r\n            id\r\n            name\r\n            likes\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_RECIPE = gql`\r\n    mutation($name: String!, $imgUrl: String!, $description: String!, $category: String!, $instructions: String!, $username: String) {\r\n        addRecipe(name: $name, imgUrl: $imgUrl, description: $description,\r\n            category: $category, instructions: $instructions, username: $username) {\r\n            ...CompleteRecipe\r\n        }\r\n    }\r\n    ${recipeFragments.recipe}\r\n`;\r\n\r\nexport const GET_USER_RECIPES = gql`\r\n    query($username: String!) {\r\n        getUserRecipes(username: $username) {\r\n            id\r\n            name\r\n            likes\r\n            imgUrl\r\n            category\r\n            description\r\n            instructions\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_USER_RECIPE = gql`\r\n    mutation($id: ID!) {\r\n        deleteUserRecipe(id: $id) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LIKE_RECIPE = gql`\r\n    mutation($id: ID!, $username: String!) {\r\n        likeRecipe(id: $id, username: $username) {\r\n            id\r\n            name\r\n            likes\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UNLIKE_RECIPE = gql`\r\n    mutation($id: ID!, $username: String!) {\r\n        unlikeRecipe(id: $id, username: $username) {\r\n            id\r\n            name\r\n            likes\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_USER_RECIPE = gql`\r\n    mutation($id: ID!, $name: String!, $imgUrl: String!, $description: String!, $category: String!,\r\n    $instructions: String!) {\r\n        updateUserRecipe(id: $id, name: $name, imgUrl: $imgUrl, description: $description, category: $category,\r\n            instructions: $instructions) {\r\n            id\r\n            name\r\n            category\r\n            imgUrl\r\n            description\r\n            instructions\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport posed from 'react-pose';\r\n\r\nconst Recipe = posed.li({\r\n   shown: {\r\n      opacity: 1\r\n   },\r\n   hidden: {\r\n      opacity: 0\r\n   }\r\n});\r\n\r\nconst RecipeItem = ({ recipe }) => (\r\n  <Recipe className='card'\r\n          style={{ background: `url(${recipe.imgUrl}) center/cover no-repeat` }}>\r\n     <span className={recipe.category}>{recipe.category}</span>\r\n     <div className='card-text'>\r\n        <Link to={`/recipe/${recipe.id}`}>\r\n           <h4>{recipe.name}</h4>\r\n        </Link>\r\n     </div>\r\n\r\n  </Recipe>\r\n);\r\n\r\nexport default RecipeItem;\r\n","import React from 'react';\r\n\r\nimport { PulseLoader } from 'react-spinners';\r\n\r\nconst Spinner = () => (\r\n  <div className='spinner'>\r\n     <PulseLoader color='#1eaedb' size={3} margin={'3px'}/>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_ALL_RECIPES } from '../queries';\r\nimport RecipeItem from './Recipe/RecipeItem';\r\nimport posed from 'react-pose';\r\nimport Spinner from './Spinner';\r\n\r\nconst RecipeList = posed.ul({\r\n   shown: {\r\n      x: '0%',\r\n      staggerChildren: 100\r\n   },\r\n   hidden: {\r\n      x: '-100%'\r\n   }\r\n});\r\n\r\nclass App extends React.Component {\r\n   state = {\r\n      on: false\r\n   };\r\n   slideIn = () => {\r\n      this.setState({ on: !this.state.on });\r\n   };\r\n\r\n   componentDidMount() {\r\n      setTimeout(this.slideIn, 200);\r\n   }\r\n\r\n   render() {\r\n      const { on } = this.state;\r\n      return (\r\n        <div className='App'>\r\n           <h1 className='main-title'>\r\n              Find Recipes You <strong>Love</strong>\r\n           </h1>\r\n           <Query query={GET_ALL_RECIPES}>\r\n              {({ data, loading, error }) => {\r\n                 if (loading) return <Spinner/>\r\n                 if (error) return <div>{error.message}</div>;\r\n                 return (\r\n                   <RecipeList pose={on ? 'shown' : 'hidden'} className='cards'>\r\n                      {data.getAllRecipes.map(recipe => <RecipeItem\r\n                        recipe={recipe} key={recipe.id}/>)}\r\n                   </RecipeList>\r\n                 );\r\n              }}\r\n           </Query>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Error = ({ error }) => (\r\n  <div>\r\n     <p>{error.message}</p>\r\n  </div>\r\n);\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { SIGNIN_USER } from '../../queries';\r\nimport Error from '../Error';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n   username: '',\r\n   password: ''\r\n};\r\n\r\nclass Signin extends React.Component {\r\n   state = {\r\n      ...initialState\r\n   };\r\n\r\n   handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n   };\r\n\r\n   clearState = () => {\r\n      this.setState({ ...initialState });\r\n   };\r\n\r\n   handleSubmit = (event, signinUser) => {\r\n      event.preventDefault();\r\n      signinUser().then(async ({ data }) => {\r\n         console.log(data);\r\n         localStorage.setItem('token', data.signinUser.token);\r\n         await this.props.refetch();\r\n         this.clearState();\r\n         this.props.history.push('/');\r\n      });\r\n   };\r\n\r\n   validateForm = () => {\r\n      const { username, password } = this.state;\r\n\r\n      const isInvalid = !username || !password;\r\n      return isInvalid;\r\n   };\r\n\r\n   render() {\r\n      const { username, password } = this.state;\r\n      return (\r\n        <div className=\"App\">\r\n           <h2 className=\"App\">Signin</h2>\r\n           <Mutation mutation={SIGNIN_USER}\r\n                     variables={{ username, password }}>\r\n              {(signinUser, { data, loading, error }) => {\r\n                 return (\r\n                   <form\r\n                     onSubmit={event => this.handleSubmit(event, signinUser)}\r\n                     className=\"form\">\r\n                      <input type=\"text\" name=\"username\" placeholder=\"Username\"\r\n                             onChange={this.handleChange} value={username}/>\r\n                      <input type=\"password\" name=\"password\"\r\n                             placeholder=\"Password\"\r\n                             onChange={this.handleChange} value={password}/>\r\n                      <button disabled={loading || this.validateForm()}\r\n                              type='submit'\r\n                              className=\"button-primary\">\r\n                         Submit\r\n                      </button>\r\n                      {error && <Error error={error}/>}\r\n                   </form>\r\n                 );\r\n              }}\r\n           </Mutation>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default withRouter(Signin);\r\n","import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { SIGNUP_USER } from '../../queries';\r\nimport Error from '../Error';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n   username: '',\r\n   email: '',\r\n   password: '',\r\n   passwordConfirmation: ''\r\n};\r\n\r\nclass Signup extends React.Component {\r\n   state = {\r\n      ...initialState\r\n   };\r\n\r\n   handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n   };\r\n\r\n   clearState = () => {\r\n      this.setState({ ...initialState });\r\n   };\r\n\r\n   handleSubmit = (event, signupUser) => {\r\n      event.preventDefault();\r\n      signupUser().then(async ({ data }) => {\r\n         console.log(data);\r\n         localStorage.setItem('token', data.signupUser.token);\r\n         await this.props.refetch();\r\n\r\n         this.clearState();\r\n         this.props.history.push('/');\r\n      });\r\n   };\r\n\r\n   validateForm = () => {\r\n      const { username, email, password, passwordConfirmation } = this.state;\r\n\r\n      const isInvalid = !username || !email || !password\r\n        || password !== passwordConfirmation;\r\n      return isInvalid;\r\n   };\r\n\r\n   render() {\r\n      const { username, email, password, passwordConfirmation } = this.state;\r\n      return (\r\n        <div className=\"App\">\r\n           <h2 className=\"App\">Signup</h2>\r\n           <Mutation mutation={SIGNUP_USER}\r\n                     variables={{ username, email, password }}>\r\n              {(signupUser, { data, loading, error }) => {\r\n                 return (\r\n                   <form\r\n                     onSubmit={event => this.handleSubmit(event, signupUser)}\r\n                     className=\"form\">\r\n                      <input type=\"text\" name=\"username\" placeholder=\"Username\"\r\n                             onChange={this.handleChange} value={username}/>\r\n                      <input type=\"email\" name=\"email\"\r\n                             placeholder=\"Email Address\"\r\n                             onChange={this.handleChange} value={email}/>\r\n                      <input type=\"password\" name=\"password\"\r\n                             placeholder=\"Password\"\r\n                             onChange={this.handleChange} value={password}/>\r\n                      <input type=\"password\" name=\"passwordConfirmation\"\r\n                             placeholder=\"Confirm Password\"\r\n                             onChange={this.handleChange}\r\n                             value={passwordConfirmation}/>\r\n                      <button disabled={loading || this.validateForm()}\r\n                              type='submit'\r\n                              className=\"button-primary\">\r\n                         Submit\r\n                      </button>\r\n                      {error && <Error error={error}/>}\r\n                   </form>\r\n                 );\r\n              }}\r\n           </Mutation>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default withRouter(Signup);\r\n","import React from 'react';\r\n\r\nimport { Query } from 'react-apollo';\r\nimport { GET_CURRENT_USER } from '../queries';\r\n\r\nconst withSession = Component => props => (\r\n  <Query query={GET_CURRENT_USER}>\r\n     {({ data, loading, refetch }) => {\r\n        if (loading) return null;\r\n        return (\r\n          <Component {...props} refetch={refetch} session={data}/>\r\n        );\r\n     }}\r\n  </Query>\r\n);\r\n\r\nexport default withSession;\r\n","import React from 'react';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst handleSignout = (client, history) => {\r\n   localStorage.removeItem('token');\r\n   client.resetStore();\r\n   history.push('/');\r\n};\r\n\r\nconst Signout = ({ history }) => (\r\n  <ApolloConsumer>\r\n     {client => {\r\n        return (\r\n          <button onClick={() => handleSignout(client, history)}>Sign\r\n             out</button>\r\n        );\r\n     }}\r\n  </ApolloConsumer>\r\n);\r\n\r\nexport default withRouter(Signout);\r\n","import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Signout from './Auth/Signout';\r\n\r\nconst NavBar = ({ session }) => (\r\n  <nav>\r\n     {session && session.getCurrentUser ? <NavBarAuth session={session}/> :\r\n       <NavBarUnAuth/>}\r\n  </nav>\r\n);\r\n\r\n\r\nconst NavBarUnAuth = () => (\r\n  <ul>\r\n     <li>\r\n        <NavLink to='/' exact>Home</NavLink>\r\n     </li>\r\n     <li>\r\n        <NavLink to='/search'>Search</NavLink>\r\n     </li>\r\n     <li>\r\n        <NavLink to='/signin'>Sign in</NavLink>\r\n     </li>\r\n     <li>\r\n        <NavLink to='/signup'>Sign up</NavLink>\r\n     </li>\r\n  </ul>\r\n);\r\n\r\nconst NavBarAuth = ({ session }) => (\r\n  <Fragment>\r\n     <ul>\r\n        <li>\r\n           <NavLink to='/' exact>Home</NavLink>\r\n        </li>\r\n        <li>\r\n           <NavLink to='/search'>Search</NavLink>\r\n        </li>\r\n        <li>\r\n           <NavLink to='/recipe/add'>Add Recipe</NavLink>\r\n        </li>\r\n        <li>\r\n           <NavLink to='/profile'>Profile</NavLink>\r\n        </li>\r\n        <li>\r\n           <Signout/>\r\n        </li>\r\n     </ul>\r\n\r\n     <h4>Welcome, <strong>{session.getCurrentUser.username}</strong></h4>\r\n  </Fragment>\r\n);\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SearchItem = ({ recipe }) => (\r\n  <li key={recipe.id}>\r\n     <Link\r\n       to={`/recipe/${recipe.id}`}>{recipe.name}</Link>\r\n     <p>Likes: {recipe.likes}</p>\r\n  </li>\r\n);\r\n\r\n\r\nexport default SearchItem;\r\n","import React from 'react';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport { SEARCH_RECIPE } from '../../queries';\r\nimport SearchItem from './SearchItem';\r\n\r\nclass Search extends React.Component {\r\n   handleChange = data => {\r\n      this.setState({ searchResult: data.searchRecipe });\r\n   };\r\n\r\n   state = {\r\n      searchResult: []\r\n   };\r\n\r\n   render() {\r\n      const { searchResult } = this.state;\r\n      return (\r\n        <ApolloConsumer>\r\n           {client => {\r\n              return (\r\n                <div className='App'>\r\n                   <input className='search' type=\"search\"\r\n                          placeholder='Search for recipes'\r\n                          onChange={async event => {\r\n                             event.persist();\r\n                             const { data } = await client.query({\r\n                                query: SEARCH_RECIPE,\r\n                                variables: { searchTerm: event.target.value }\r\n                             });\r\n                             this.handleChange(data);\r\n                          }}/>\r\n                   <ul>\r\n                      {searchResult.map(recipe =>\r\n                        <SearchItem recipe={recipe}/>\r\n                      )}\r\n                   </ul>\r\n                </div>\r\n              );\r\n           }}\r\n        </ApolloConsumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { GET_CURRENT_USER } from './queries';\r\n\r\n\r\nconst withAuth = conditionFunc => Component => props => (\r\n  <Query query={GET_CURRENT_USER}>\r\n     {({ data, loading }) => {\r\n        if (loading) return null;\r\n        return (\r\n          conditionFunc(data) ? <Component/> : <Redirect to='/'/>\r\n        );\r\n     }}\r\n  </Query>\r\n);\r\n\r\nexport default withAuth;\r\n","import React from 'react';\r\nimport withSession from '../withSession';\r\nimport { Mutation } from 'react-apollo';\r\nimport { ADD_RECIPE, GET_ALL_RECIPES, GET_USER_RECIPES } from '../../queries';\r\nimport Error from '../Error';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuth from '../../withAuth';\r\nimport CKEditor from 'react-ckeditor-component';\r\n\r\nconst initialState = {\r\n   name: '',\r\n   instructions: '',\r\n   category: 'Breakfast',\r\n   description: '',\r\n   username: '',\r\n   imgUrl: ''\r\n};\r\n\r\nclass AddRecipe extends React.Component {\r\n   state = {\r\n      ...initialState\r\n   };\r\n   clearState = () => {\r\n      this.setState({ ...initialState });\r\n   };\r\n   handleChange = event => {\r\n      const { name, value } = event.target;\r\n\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n   };\r\n\r\n   handleEditorChange = e => {\r\n      const newContent = e.editor.getData();\r\n      this.setState({ instructions: newContent });\r\n   };\r\n\r\n   validateForm = () => {\r\n      const { name, category, description, instructions, imgUrl } = this.state;\r\n      const isValid = !name || !imgUrl || !category || !description || !instructions;\r\n      return isValid;\r\n   };\r\n\r\n   handleSubmit = (event, addRecipe) => {\r\n      event.preventDefault();\r\n      addRecipe().then(({ data }) => {\r\n         console.log(data);\r\n         this.clearState();\r\n         this.props.history.push('/');\r\n      });\r\n   };\r\n   updateCache = (cache, { data: { addRecipe } }) => {\r\n      const { getAllRecipes } = cache.readQuery({ query: GET_ALL_RECIPES });\r\n\r\n      cache.writeQuery({\r\n         query: GET_ALL_RECIPES,\r\n         data: { getAllRecipes: [addRecipe, ...getAllRecipes] }\r\n      });\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.setState({ username: this.props.session.getCurrentUser.username });\r\n   }\r\n\r\n   render() {\r\n      const { name, imgUrl, category, description, instructions, username } = this.state;\r\n      return (\r\n        <Mutation mutation={ADD_RECIPE} variables={{\r\n           name,\r\n           imgUrl,\r\n           category,\r\n           description,\r\n           instructions,\r\n           username\r\n        }}\r\n                  refetchQueries={() => [\r\n                     { query: GET_USER_RECIPES, variables: { username } }\r\n                  ]}\r\n                  update={this.updateCache}>\r\n           {(addRecipe, { data, loading, error }) => {\r\n\r\n              return (\r\n                <div className='App'>\r\n                   <h2 className='App'>Add Recipe</h2>\r\n                   <form className='form'\r\n                         onSubmit={event => this.handleSubmit(event, addRecipe)}>\r\n                      <input type=\"text\" name='name'\r\n                             onChange={this.handleChange}\r\n                             placeholder='Recipe Name' value={name}/>\r\n                      <input type=\"text\" name='imgUrl'\r\n                             onChange={this.handleChange}\r\n                             placeholder='Recipe Image' value={imgUrl}/>\r\n                      <select name='category' onChange={this.handleChange}\r\n                              value={category}>\r\n                         <option value=\"Breakfast\">Breakfast</option>\r\n                         <option value=\"Lunch\">Lunch</option>\r\n                         <option value=\"Dinner\">Dinner</option>\r\n                         <option value=\"Snack\">Snack</option>\r\n                      </select>\r\n                      <input type=\"text\" name='description'\r\n                             onChange={this.handleChange}\r\n                             placeholder='Add Description' value={description}/>\r\n                      <label htmlFor='instructions'>Add Instructions</label>\r\n                      <CKEditor name='instructions' content={instructions}\r\n                                events={{ change: this.handleEditorChange }}/>\r\n                      <button disabled={loading || this.validateForm()}\r\n                              type='submit' className='button-primary'>Submit\r\n                      </button>\r\n                      {error && <Error error={error}/>}\r\n                   </form>\r\n                </div>\r\n              );\r\n           }}\r\n        </Mutation>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nexport default withAuth(session => session && session.getCurrentUser)(withRouter(withSession(AddRecipe)));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst UserInfo = ({ session }) => {\r\n   return (\r\n     <div className='App'>\r\n        <h3>UserInfo</h3>\r\n        <p>Username: {session.getCurrentUser.username}</p>\r\n        <p>Email: {session.getCurrentUser.email}</p>\r\n        <ul>\r\n           <h3>{session.getCurrentUser.username}'s Favorites</h3>\r\n           {session.getCurrentUser.favorites.map(fav =>\r\n             <li key={fav.id}>\r\n                <Link to={`/recipe/${fav.id}`}>{fav.name}</Link>\r\n             </li>\r\n           )}\r\n           {!session.getCurrentUser.favorites.length &&\r\n           <p><strong>You have no favorite recipe. Go add some!</strong></p>\r\n           }\r\n        </ul>\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from 'react';\r\nimport { Mutation, Query } from 'react-apollo';\r\nimport {\r\n   DELETE_USER_RECIPE,\r\n   GET_ALL_RECIPES,\r\n   GET_CURRENT_USER,\r\n   GET_USER_RECIPES,\r\n   UPDATE_USER_RECIPE\r\n} from '../../queries';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nclass UserRecipes extends React.Component {\r\n   state = {\r\n      name: '',\r\n      imgUrl: '',\r\n      category: '',\r\n      description: '',\r\n      instructions: '',\r\n      modal: false\r\n   };\r\n   handleDelete = deleteUserRecipe => {\r\n      const confirmDelete = window.confirm('Are you sure want to delete this recipe?');\r\n\r\n      if (confirmDelete) {\r\n         deleteUserRecipe().then(({ data }) => console.log(data));\r\n      }\r\n   };\r\n\r\n   closeModal = () => {\r\n      this.setState({ modal: false });\r\n   };\r\n\r\n   handleChange = event => {\r\n      const { name, value } = event.target;\r\n\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n   };\r\n\r\n   loadRecipe = recipe => {\r\n      this.setState({ ...recipe, modal: true });\r\n   };\r\n\r\n   handleSubmit = (event, updateUserRecipe) => {\r\n      event.preventDefault();\r\n      updateUserRecipe().then(({ data }) => {\r\n         console.log(data);\r\n         this.closeModal();\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const { username } = this.props;\r\n      const { modal } = this.state;\r\n      return (\r\n        <Query query={GET_USER_RECIPES}\r\n               variables={{ username }}>\r\n           {({ data, loading, error }) => {\r\n              if (loading) return <Spinner/>;\r\n              if (error) return <div>Error</div>;\r\n              return (\r\n                <ul className='App'>\r\n                   {modal && <EditRecipeModel recipe={this.state}\r\n                                              closeModal={this.closeModal}\r\n                                              handleChange={this.handleChange}\r\n                                              handleSubmit={this.handleSubmit}/>}\r\n                   <h3>Your Recipes</h3>\r\n                   {!data.getUserRecipes.length &&\r\n                   <p><strong>You have not added any recipe yet</strong></p>}\r\n                   {data.getUserRecipes.map(recipe => <li key={recipe.id}>\r\n                      <Link to={`/recipe/${recipe.id}`}>{recipe.name}</Link>\r\n                      <p>Likes: {recipe.likes}</p>\r\n                      <Mutation mutation={DELETE_USER_RECIPE}\r\n                                variables={{ id: recipe.id }}\r\n                                refetchQueries={() => [\r\n                                   { query: GET_ALL_RECIPES },\r\n                                   { query: GET_CURRENT_USER }\r\n                                ]}\r\n                                update={(caches, { data: { deleteUserRecipe } }) => {\r\n                                   const { getUserRecipes } = caches.readQuery({\r\n                                      query: GET_USER_RECIPES,\r\n                                      variables: { username }\r\n                                   });\r\n\r\n                                   caches.writeQuery({\r\n                                      query: GET_USER_RECIPES,\r\n                                      variables: { username },\r\n                                      data: {\r\n                                         getUserRecipes: getUserRecipes.filter(recipe => recipe.id !== deleteUserRecipe.id)\r\n                                      }\r\n                                   });\r\n                                }}>\r\n                         {(deleteUserRecipe, attrs = {}) => {\r\n                            return (\r\n                              <div>\r\n                                 <button className='button-primary'\r\n                                         onClick={() => this.loadRecipe(recipe)}>\r\n                                    Update\r\n                                 </button>\r\n                                 <p className='delete-button'\r\n                                    style={{ marginBottom: 0 }}\r\n                                    onClick={() => this.handleDelete(deleteUserRecipe)}>\r\n                                    {attrs.loading ? 'deleting...' : 'X'}\r\n                                 </p>\r\n                              </div>\r\n                            );\r\n                         }}\r\n\r\n                      </Mutation>\r\n                   </li>)}\r\n                </ul>\r\n              );\r\n           }}\r\n        </Query>\r\n      );\r\n   }\r\n}\r\n\r\nconst EditRecipeModel = ({ handleSubmit, handleChange, closeModal, recipe }) => (\r\n  <Mutation mutation={UPDATE_USER_RECIPE} variables={{\r\n     id: recipe.id,\r\n     name: recipe.name,\r\n     imgUrl: recipe.imgUrl,\r\n     category: recipe.category,\r\n     description: recipe.description,\r\n     instructions: recipe.instructions\r\n  }}>\r\n     {(updateUserRecipe) => {\r\n        return (\r\n          <div className='modal modal-open'>\r\n             <div className='modal-inner'>\r\n                <div className='modal-content'>\r\n                   <form\r\n                     onSubmit={event => handleSubmit(event, updateUserRecipe)}\r\n                     className='modal-content-inner'>\r\n                      <h4>Edit Recipe</h4>\r\n                      <label htmlFor='name'>Name</label>\r\n                      <input type=\"text\" name='name'\r\n                             onChange={handleChange} value={recipe.name}/>\r\n                      <label htmlFor='imgUrl'>Image</label>\r\n                      <input type=\"text\" name='imgUrl'\r\n                             onChange={handleChange} value={recipe.imgUrl}/>\r\n                      <label htmlFor='category'>Category</label>\r\n                      <select name='category' onChange={handleChange}\r\n                              value={recipe.category}>\r\n                         <option value=\"Breakfast\">Breakfast</option>\r\n                         <option value=\"Lunch\">Lunch</option>\r\n                         <option value=\"Dinner\">Dinner</option>\r\n                         <option value=\"Snack\">Snack</option>\r\n                      </select>\r\n                      <label htmlFor='description'>Description</label>\r\n                      <input type=\"text\" name='description'\r\n                             onChange={handleChange}\r\n                             value={recipe.description}/>\r\n                      <label htmlFor='instructions'>Add Instructions</label>\r\n                      <input type=\"text\" name='instructions'\r\n                             onChange={handleChange}\r\n                             value={recipe.instructions}/>\r\n                      <hr/>\r\n                      <div className='modal-buttons'>\r\n                         <button className='button-primary' type='submit'>Update\r\n                         </button>\r\n                         <button onClick={closeModal}>Cancel</button>\r\n                      </div>\r\n                   </form>\r\n                </div>\r\n             </div>\r\n          </div>\r\n        );\r\n     }}\r\n  </Mutation>\r\n);\r\n\r\n\r\nexport default UserRecipes;\r\n","import React from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport withSession from '../withSession';\r\nimport UserRecipes from './UserRecipes';\r\nimport withAuth from '../../withAuth';\r\n\r\nconst Profile = ({ session }) => (\r\n  <div>\r\n     <UserInfo session={session}/>\r\n     <UserRecipes username={session.getCurrentUser.username}/>\r\n  </div>\r\n);\r\n\r\nexport default withAuth(session => session && session.getCurrentUser)(withSession(Profile));\r\n","import React from 'react';\r\nimport withSession from '../withSession';\r\nimport { Mutation } from 'react-apollo';\r\nimport { GET_RECIPE, LIKE_RECIPE, UNLIKE_RECIPE } from '../../queries';\r\n\r\n\r\nclass LikeRecipe extends React.Component {\r\n   state = {\r\n      liked: false,\r\n      username: ''\r\n   };\r\n\r\n   handleClick = (likeRecipe, unlikeRecipe) => {\r\n      this.setState(prevState => ({\r\n         liked: !prevState.liked\r\n      }), () => this.handleLike(likeRecipe, unlikeRecipe));\r\n\r\n\r\n   };\r\n   handleLike = (likeRecipe, unlikeRecipe) => {\r\n      if (this.state.liked) {\r\n         likeRecipe().then(async ({ data }) => {\r\n            await this.props.refetch();\r\n         });\r\n      } else {\r\n         unlikeRecipe().then(async ({ data }) => {\r\n            await this.props.refetch();\r\n         });\r\n      }\r\n   };\r\n\r\n   updateLike = (cache, { data: { likeRecipe } }) => {\r\n      const { id } = this.props;\r\n      const { getRecipe } = cache.readQuery({\r\n         query: GET_RECIPE, variables: { id }\r\n      });\r\n\r\n      cache.writeQuery({\r\n         query: GET_RECIPE, variables: { id },\r\n         data: {\r\n            getRecipe: { ...getRecipe, likes: likeRecipe.likes + 1 }\r\n         }\r\n      });\r\n   };\r\n\r\n   updateUnlike = (cache, { data: { unlikeRecipe } }) => {\r\n      const { id } = this.props;\r\n      const { getRecipe } = cache.readQuery({\r\n         query: GET_RECIPE, variables: { id }\r\n      });\r\n\r\n      cache.writeQuery({\r\n         query: GET_RECIPE, variables: { id },\r\n         data: {\r\n            getRecipe: { ...getRecipe, likes: unlikeRecipe.likes - 1 }\r\n         }\r\n      });\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { session: { getCurrentUser } } = this.props;\r\n      const { id } = this.props;\r\n      if (getCurrentUser) {\r\n         const { username, favorites } = getCurrentUser;\r\n         const prevLiked = favorites.findIndex(fav => fav.id === id) > -1;\r\n         this.setState({\r\n            username,\r\n            liked: prevLiked\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { username, liked } = this.state;\r\n      const { id } = this.props;\r\n      return (\r\n        <Mutation mutation={UNLIKE_RECIPE} variables={{ id, username }}\r\n                  update={this.updateUnlike}\r\n        >\r\n           {(unlikeRecipe) => {\r\n              return (\r\n                <Mutation mutation={LIKE_RECIPE} variables={{ id, username }}\r\n                          update={this.updateLike}>\r\n                   {(likeRecipe) => {\r\n                      return (\r\n                        username && <button\r\n                          className='like-button'\r\n                          onClick={() => this.handleClick(likeRecipe, unlikeRecipe)}>\r\n                           {liked ? 'Liked' : 'Like'}\r\n                        </button>\r\n                      );\r\n                   }}\r\n                </Mutation>\r\n              );\r\n           }}\r\n\r\n        </Mutation>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withSession(LikeRecipe);\r\n","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_RECIPE } from '../../queries';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LikeRecipe from './LikeRecipe';\r\nimport Spinner from '../Spinner';\r\n\r\nconst RecipePage = ({ match }) => {\r\n   const { id } = match.params;\r\n   return (\r\n     <Query query={GET_RECIPE} variables={{ id }}>\r\n        {({ data, loading, error }) => {\r\n           if (loading) return <Spinner/>;\r\n           if (error) return <div>Error</div>;\r\n           return (\r\n             <div className='App'>\r\n                <div\r\n                  style={{ background: `url(${data.getRecipe.imgUrl}) center center / cover no-repeat` }}\r\n                  className='recipe-image'>\r\n                </div>\r\n                <div className='recipe'>\r\n                   <div className=\"recipe-header\">\r\n                      <h2 className=\"recipe-name\">\r\n                         <strong>{data.getRecipe.name}</strong>\r\n                      </h2>\r\n                      <h5>\r\n                         <strong>{data.getRecipe.category}</strong>\r\n                      </h5>\r\n                      <p>Created by <strong>{data.getRecipe.username}</strong>\r\n                      </p>\r\n                      <p>{data.getRecipe.likes}<span role='img'\r\n                                                     aria-label='heart'>❤</span>\r\n                      </p>\r\n                   </div>\r\n                   <blockquote className='recipe-description'>\r\n                      {data.getRecipe.description}\r\n                   </blockquote>\r\n                   <h3 className='recipe-instructions__title'>\r\n                      Instructions\r\n                   </h3>\r\n                   <div className='recipe-instructions'\r\n                        dangerouslySetInnerHTML={{ __html: data.getRecipe.instructions }}>\r\n                   </div>\r\n                   <LikeRecipe id={id}/>\r\n                </div>\r\n             </div>\r\n           );\r\n        }}\r\n     </Query>\r\n\r\n   );\r\n};\r\n\r\nexport default withRouter(RecipePage);\r\n","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport {\r\n   BrowserRouter as Router,\r\n   Redirect,\r\n   Route,\r\n   Switch\r\n} from 'react-router-dom';\r\nimport Signin from './components/Auth/Signin';\r\nimport Signup from './components/Auth/Signup';\r\nimport withSession from './components/withSession';\r\nimport NavBar from './components/NavBar';\r\nimport Search from './components/Recipe/Search';\r\nimport AddRecipe from './components/Recipe/AddRecipe';\r\nimport Profile from './components/Profile/Profile';\r\nimport RecipePage from './components/Recipe/RecipePage';\r\n\r\nconst client = new ApolloClient({\r\n   uri: 'https://recipello.herokuapp.com/graphql',\r\n   fetchOptions: {\r\n      credentials: 'include'\r\n   },\r\n   request: operation => {\r\n      const token = localStorage.getItem('token');\r\n      operation.setContext({\r\n         headers: {\r\n            authorization: token\r\n         }\r\n      });\r\n   },\r\n   onError: ({ networkError }) => {\r\n      if (networkError) {\r\n         console.log('Network error', networkError);\r\n\r\n         if (networkError.statusCode === 401) {\r\n            localStorage.removeItem('token');\r\n         }\r\n      }\r\n   }\r\n});\r\n\r\nconst Root = ({ refetch, session }) => (\r\n  <Router>\r\n     <Fragment>\r\n        <NavBar session={session}/>\r\n        <Switch>\r\n           <Route exact path='/' component={App}/>\r\n           <Route path='/search' component={Search}/>\r\n           <Route path='/signin' render={() => <Signin refetch={refetch}/>}/>\r\n           <Route path='/signup' render={() => <Signup refetch={refetch}/>}/>\r\n           <Route path='/recipe/add' component={AddRecipe}/>\r\n           <Route path='/recipe/:id' component={RecipePage}/>\r\n           <Route path='/profile' component={Profile}/>\r\n           <Redirect to='/'/>\r\n        </Switch>\r\n     </Fragment>\r\n  </Router>\r\n);\r\n\r\nconst RootWithSession = withSession(Root);\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n     <RootWithSession/>\r\n  </ApolloProvider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}